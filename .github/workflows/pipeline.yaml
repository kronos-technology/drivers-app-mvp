name: Pipeline

on:
  push:
    branches:
      - 'main'
      - 'feat**'
  delete:
    branches:
      - 'feat**'

env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.DEV_ACCESS_KEY }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.DEV_SECRET_KEY }}
  SAM_TEMPLATE: template.yaml
  TESTING_STACK_NAME: kronos-backend-test
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::349156045847:role/aws-sam-cli-managed-dev-pipe-PipelineExecutionRole-KHP7JX4JJIFD
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::349156045847:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionR-1WA950Z9V44IH
  TESTING_ARTIFACTS_BUCKET: aws-sam-cli-managed-dev-pipeline-artifactsbucket-1lp61mwvfv31s
  # If there are functions with "Image" PackageType in your template,
  # uncomment the line below and add "--image-repository ${TESTING_IMAGE_REPOSITORY}" to
  # testing "sam package" and "sam deploy" commands.
  # TESTING_IMAGE_REPOSITORY = '0123456789.dkr.ecr.region.amazonaws.com/repository-name'
  TESTING_REGION: sa-east-1
  PROD_STACK_NAME: kronos-backend-prod
  PROD_PIPELINE_EXECUTION_ROLE: arn:aws:iam::349156045847:role/aws-sam-cli-managed-prd-pipe-PipelineExecutionRole-KP4XESJGUDMB
  PROD_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::349156045847:role/aws-sam-cli-managed-prd-p-CloudFormationExecutionR-RJKVOZBWQIS2
  PROD_ARTIFACTS_BUCKET: aws-sam-cli-managed-prd-pipeline-artifactsbucket-hkcbsisfqvx0
  # If there are functions with "Image" PackageType in your template,
  # uncomment the line below and add "--image-repository ${PROD_IMAGE_REPOSITORY}" to
  # prod "sam package" and "sam deploy" commands.
  # PROD_IMAGE_REPOSITORY = '0123456789.dkr.ecr.region.amazonaws.com/repository-name'
  PROD_REGION: sa-east-1

jobs:
  test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          # trigger the tests here

  delete-feature:
    if: startsWith(github.event.ref, 'feat') && github.event_name == 'delete'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Delete feature branch stack
        env:
          FEATURE_BRANCH_NAME: ${{ github.event.ref }}
        run: |
          cdk destroy --force

  build-and-deploy-feature:
    # this stage is triggered only for feature branches (feature*),
    # which will build the stack and deploy to a stack named with branch name.
    if: startsWith(github.ref, 'refs/heads/feat')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install dependencies
        run: yarn
      - name: Compile Typescript
        run: yarn build
      - name: Synth stack
        run: yarn cdk synth

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: feature-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy to feature stack in the testing account
        shell: bash
        run: |
          cdk deploy --all --require-approval never

  build-and-package:
    if: github.ref == 'refs/heads/main'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install dependencies
        run: yarn
      - name: Compile Typescript
        run: yarn build
      - name: Synth stack
        run: yarn cdk synth
