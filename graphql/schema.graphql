type Driver @aws_api_key @aws_cognito_user_pools {
  id: String!
  driverId: String!
  name: String!
  lastName: String!
  companyId: String!
  birthdate: String!
  phone: AWSPhone!
}

input DriverInfo {
  driverId: String!
  name: String!
  lastName: String!
  companyId: String!
  birthdate: String!
  phone: AWSPhone!
}

input DriverUpdate {
  driverId: String!
  name: String
  lastName: String
  companyId: String
  birthdate: String
  phone: AWSPhone
}

type Vehicle @aws_api_key @aws_cognito_user_pools {
  id: String!
  plate: String!
  vehicleNumber: String!
  companyId: String!
  status: String
  currentDriverId: String
  lastMaintenance: AWSDate
}

input VehicleInfo {
  plate: String!
  vehicleNumber: String!
  companyId: String!
  status: String
  currentDriverId: String
  lastMaintenance: AWSDate
}

input VehicleUpdate {
  plate: String!
  vehicleNumber: String
  companyId: String
  status: String
  currentDriverId: String
  lastMaintenance: AWSDate
}

type Company @aws_api_key @aws_cognito_user_pools {
  id: String!
  alias: String!
  companyId: String!
  name: String!
  phone: AWSPhone!
  email: String!
  city: String!
  address: String!
  nit: String!
}

input CompanyInfo{
  id: String!
  alias: String!
  companyId: String!
  name: String!
  phone: AWSPhone!
  email: String!
  city: String!
  address: String!
  nit: String!
}

input CompanyUpdate {
  companyId: String!
  alias: String
  name: String
  phone: AWSPhone
  email: String
  city: String
  address: String
  nit: String
}

type Route @aws_api_key @aws_cognito_user_pools {
  id: String!
  routeId: String!
  origin: String!
  destination: String!
  geojson: String!
  intermediates: [String]
}

input RouteInfo {
  routeid: String!
  origin: String!
  destination: String!
  geojson: String!
  intermediates: [String]
}

input RouteUpdate {
  route_id: String!
  origin: String
  destination: String
  geojson: String
  intermediates: [String]
}

type Checkpoint @aws_api_key @aws_cognito_user_pools {
  id: String!
  checkpointId: String!
  description: String
  latitude: Float!
  longitude: Float!
  geohash: String!
}

input CheckpointInfo {
  checkpointId: String!
  description: String
  latitude: Float!
  longitude: Float!
  geohash: String!
}

input CheckpointUpdate {
  checkpointId: String!
  description: String
  latitude: Float
  longitude: Float
  geohash: String
}

type RouteInCompany @aws_api_key @aws_cognito_user_pools {
  id: String!
  routeId: String!
  companyId: String!
}

input RouteInCompanyInfo {
  routeId: String!
  companyId: String!
}

type Checkin @aws_api_key @aws_cognito_user_pools {
  id: ID
  checkpointId: String!
  routeId: String!
  timestamp: AWSDateTime!
  plate: String!
  companyId: String!
  vehicleNumber: String!
  driverId: String!
  lastCheckin: String
}

input CheckinInfo {
  id: ID
  checkpointId: String!
  routeId: String!
  timestamp: AWSDateTime!
  plate: String!
  companyId: String!
  vehicleNumber: String!
  driverId: String!
  lastCheckin: String
}

input CheckinUpdate {
  id: ID
  checkpointId: String!
  routeId: String
  timestamp: AWSDateTime
  plate: String
  companyId: String
  vehicleNumber: String
  driverId: String
  lastCheckin: String
}

type RouteInCheckpoint @aws_api_key @aws_cognito_user_pools {
  id: String!
  routeId: String!
  companyId: String!
}

input RouteInCheckpointInfo {
  routeId: String!
  checkpointId: String!
}

type Query {
  # Driver
  getDriverById(driverId: String!): Driver @aws_api_key @aws_cognito_user_pools
  listDrivers(companyId: String, limit: Int): [Driver] @aws_api_key @aws_cognito_user_pools
  # Vehicle
  getVehicleByPlate(plate: String!): Vehicle @aws_api_key @aws_cognito_user_pools
  listVehicles(companyId: String, limit: Int): [Vehicle] @aws_api_key @aws_cognito_user_pools
  # Company
  getCompanyById(companyId: String!): Company @aws_api_key @aws_cognito_user_pools
  listCompanies(city: String, limit: Int): [Company] @aws_api_key @aws_cognito_user_pools
  listRoutesInCompany(companyId: String!): [RouteInCompany] @aws_api_key @aws_cognito_user_pools
  # Route
  getRouteById(routeId: String!): Route @aws_api_key @aws_cognito_user_pools
  listRoutes(limit: Int): [Route] @aws_api_key @aws_cognito_user_pools
  routesByOrigin(origin: String!, limit: Int): [Route] @aws_api_key @aws_cognito_user_pools
  routesByDestination(destination: String!, limit: Int): [Route] @aws_api_key @aws_cognito_user_pools
  # Checkpoint
  getCheckpointById(checkpointId: ID!): Checkpoint @aws_api_key @aws_cognito_user_pools
  listCheckpoints(route: String, limit: Int): [Checkpoint] @aws_api_key @aws_cognito_user_pools
  listRoutesInCheckpoint(checkpointId: ID!): [RouteInCheckpoint] @aws_api_key @aws_cognito_user_pools
  # Checkin
  getCheckinById(checkinId: String!): Checkin @aws_api_key @aws_cognito_user_pools
}

type Mutation {
  # Driver
  createDriver(data: DriverInfo!): Driver
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  deleteDriver(driverId: String!): Driver
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  updateDriver(data: DriverUpdate!): Driver
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  # Vehicle
  createVehicle(data: VehicleInfo!): Vehicle
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  deleteVehicle(plate: String!): Vehicle
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  updateVehicle(data: VehicleUpdate!): Vehicle
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  # Company
  createCompany(data: CompanyInfo!): Company
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  deleteCompany(companyId: String!): Company
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  updateCompany(data: CompanyUpdate!): Company
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  assignRouteInCompany(data: RouteInCompanyInfo!): RouteInCompany
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  unassignRouteInCompany(data: RouteInCompanyInfo!): RouteInCompany
  # Route
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  createRoute(data: RouteInfo!): Route
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  deleteRoute(routeId: String!): Route
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  updateRoute(data: RouteUpdate!): Route
  # Checkpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  createCheckpoint(data: CheckpointInfo!): Checkpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  deleteCheckpoint(checkpointId: String!): Checkpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  updateCheckpoint(data: CheckpointUpdate!): Company
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  assignRouteInCheckpoint(data: RouteInCheckpointInfo!): RouteInCheckpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  unassignRouteInCheckpoint(data: RouteInCheckpointInfo!): RouteInCheckpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  # Checkin
  createCheckin(data: CheckinInfo!): Checkin
    @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
}

type Subscription {
  onCreateCheckin: Checkin @aws_subscribe(mutations: ["createCheckin"])
}
