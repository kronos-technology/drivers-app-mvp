type Driver @aws_api_key @aws_cognito_user_pools {
  age: Int
  birthdate: String!
  companyId: String!
  driverId: String!
  id: String!
  lastName: String!
  name: String!
  phone: AWSPhone!
}

input DriverInfo {
  age: String
  birthdate: String!
  companyId: String!
  driverId: String!
  lastName: String!
  name: String!
  phone: AWSPhone!
}

input DriverUpdate {
  birthdate: String
  companyId: String
  driverId: String!
  lastName: String
  name: String
  phone: AWSPhone
}

type Vehicle @aws_api_key @aws_cognito_user_pools {
  companyId: String!
  currentDriverId: String
  id: String!
  lastMaintenance: AWSDate
  plate: String!
  status: String
  vehicleNumber: String!
}

input VehicleInfo {
  companyId: String!
  currentDriverId: String
  lastMaintenance: AWSDate
  plate: String!
  status: String
  vehicleNumber: String!
}

input VehicleUpdate {
  companyId: String
  currentDriverId: String
  lastMaintenance: AWSDate
  plate: String!
  status: String
  vehicleNumber: String
}

type Company @aws_api_key @aws_cognito_user_pools {
  address: String
  alias: String!
  city: String!
  companyId: String!
  email: String!
  id: String!
  name: String!
  nit: String!
  phone: AWSPhone
  routes: [Route]
  drivers: [Driver]
  vehicles: [Vehicle]
}

input CompanyInfo {
  address: String
  alias: String!
  city: String!
  companyId: String!
  email: String
  id: String
  name: String!
  nit: String
  phone: AWSPhone
}

input CompanyUpdate {
  address: String
  alias: String
  city: String
  companyId: String!
  email: String
  name: String
  nit: String
  phone: AWSPhone
}

type Route @aws_api_key @aws_cognito_user_pools {
  destination: String!
  geojson: String!
  id: String
  origin: String!
  routeId: String!
  companies: [RouteInCompany]
  checkpoints: [Checkpoint]
}

input RouteInfo {
  destination: String
  geojson: String
  id: String
  origin: String
  routeId: String!
}

input RouteUpdate {
  destination: String
  geojson: String
  id: String
  origin: String
  routeId: String!
}

type Checkpoint @aws_api_key @aws_cognito_user_pools {
  alias: String!
  checkpointId: String!
  geohash: String!
  id: String!
  latitude: Float!
  longitude: Float!
  tickets: [Ticket]
  routes: [Route]
}

input CheckpointInfo {
  alias: String!
  checkpointId: String!
  geohash: String!
  id: String!
  latitude: Float!
  longitude: Float!
}

input CheckpointUpdate {
  alias: String
  checkpointId: String!
  geohash: String
  id: String
  latitude: Float
  longitude: Float
}

type RouteInCompany @aws_api_key @aws_cognito_user_pools {
  companyId: String!
  id: String!
  routeId: String!
}

type Ticket @aws_api_key @aws_cognito_user_pools {
  checkpointId: String!
  companyId: String!
  driverId: String!
  followingTicket: String
  id: String
  plate: String!
  previousTicket: String
  routeId: String!
  timestamp: AWSDateTime!
  vehicleId: String
  vehicleNumber: String!
}

input TicketInfo {
  checkpointId: String!
  companyId: String!
  driverId: String!
  followingTicket: String
  id: String
  plate: String!
  previousTicket: String
  routeId: String!
  timestamp: AWSDateTime!
  vehicleId: String!
  vehicleNumber: String!
}

input TicketUpdate {
  checkpointId: String!
  companyId: String
  driverId: String
  followingTicket: String
  id: String
  plate: String!
  previousTicket: String
  routeId: String!
  timestamp: AWSDateTime!
  vehicleId: String
  vehicleNumber: String
}

type RouteInCheckpoint @aws_api_key @aws_cognito_user_pools {
  companyId: String!
  id: String!
  routeId: String!
}

type Trip @aws_api_key @aws_cognito_user_pools {
  companyId: String!
  driverId: String!
  endTime: AWSDateTime
  id: String
  plate: String!
  routeId: String!
  startTime: AWSDateTime!
  status: String!
  tickets: [Ticket]
  vehicleId: String!
}

input TripInfo @aws_api_key @aws_cognito_user_pools {
  companyId: String!
  driverId: String
  endTime: AWSDateTime
  id: String
  plate: String
  routeId: String!
  startTime: AWSDateTime!
  status: String!
  vehicleId: String!
}

input TripUpdate @aws_api_key @aws_cognito_user_pools {
  companyId: String!
  driverId: String
  endTime: AWSDateTime
  id: String
  plate: String
  routeId: String!
  startTime: AWSDateTime!
  status: String
  vehicleId: String!
}

type Query {
  # Driver
  getDriver(driverId: String!): Driver @aws_api_key @aws_cognito_user_pools
  getDrivers(companyId: String, limit: Int): [Driver]
    @aws_api_key
    @aws_cognito_user_pools
  # Vehicle
  getVehicle(plate: String!): Vehicle @aws_api_key @aws_cognito_user_pools
  getVehicles(companyId: String, limit: Int): [Vehicle]
    @aws_api_key
    @aws_cognito_user_pools
  # Company
  getCompany(companyId: String!): Company @aws_api_key @aws_cognito_user_pools
  getCompanies(city: String, limit: Int): [Company]
    @aws_api_key
    @aws_cognito_user_pools
  # Route
  getRoute(routeId: String!): Route @aws_api_key @aws_cognito_user_pools
  getRoutes(origin: String, destination: String, limit: Int): [Route]
    @aws_api_key
    @aws_cognito_user_pools
  # Checkpoint
  getCheckpoint(checkpointId: ID!): Checkpoint
    @aws_api_key
    @aws_cognito_user_pools
  getCheckpoints(route: String, limit: Int): [Checkpoint]
    @aws_api_key
    @aws_cognito_user_pools
  # Ticket
  getTicket(
    checkpointId: String!
    routeId: String!
    timestamp: String!
  ): Ticket @aws_api_key @aws_cognito_user_pools
  getTickets(vehicleId: String, routeId: String): [Ticket]
    @aws_api_key
    @aws_cognito_user_pools
  # Trip
  getTrip(routeId: String!, companyId: String!, start: String!): Trip
    @aws_api_key
    @aws_cognito_user_pools
  getTrips(vehicleId: String, companyId: String): [Trip]
    @aws_api_key
    @aws_cognito_user_pools
}

type Mutation {
  # Driver
  createDriver(data: DriverInfo!): Driver
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  deleteDriver(driverId: String!): Driver
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  updateDriver(data: DriverUpdate!): Driver
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  # Vehicle
  createVehicle(data: VehicleInfo!): Vehicle
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  deleteVehicle(plate: String!): Vehicle
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  updateVehicle(data: VehicleUpdate!): Vehicle
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  # Company
  createCompany(data: CompanyInfo!): Company
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  deleteCompany(companyId: String!): Company
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  updateCompany(data: CompanyUpdate!): Company
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  addRouteInCompany(companyId: String!, routeId: String!): RouteInCompany
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  deleteRouteInCompany(companyId: String!, routeId: String!): RouteInCompany
    # Route
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  createRoute(data: RouteInfo!): Route
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  deleteRoute(routeId: String!): Route
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  updateRoute(data: RouteUpdate!): Route
    # Checkpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  createCheckpoint(data: CheckpointInfo!): Checkpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  deleteCheckpoint(checkpointId: String!): Checkpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  updateCheckpoint(data: CheckpointUpdate!): Checkpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  addRouteInCheckpoint(
    checkpointId: String!
    routeId: String!
  ): RouteInCheckpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  deleteRouteInCheckpoint(
    checkpointId: String!
    routeId: String!
  ): RouteInCheckpoint
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  # Ticket
  generateTicket(data: TicketInfo!): Ticket
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  updateTicket(data: TicketUpdate!): Ticket
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  deleteTicket(
    checkpointId: String!
    routeId: String!
    timestamp: String!
  ): Ticket @aws_cognito_user_pools(cognito_groups: ["Admin"]) @aws_api_key
  # Trip
  createTrip(data: TripInfo!): Trip
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  deleteTrip(routeId: String!, companyId: String!, start: String!): Trip
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
  updateTrip(data: TripUpdate!): Trip
    @aws_cognito_user_pools(cognito_groups: ["Admin"])
    @aws_api_key
}

type Subscription {
  onGenerateTicket: Ticket @aws_subscribe(mutations: ["generateTicket"])
}
